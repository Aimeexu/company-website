{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"tech-section\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"tech-list\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  class: \"tech-title\"\n};\nconst _hoisted_6 = {\n  class: \"tech-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"section-title\"\n  }, \"产品展示\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.techs, (tech, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"tech-item\",\n      key: index\n    }, [_createElementVNode(\"img\", {\n      class: \"tech-img\",\n      src: tech.img,\n      alt: tech.title\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(tech.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_6, _toDisplayString(tech.content), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","techs","tech","index","key","src","img","alt","title","_hoisted_5","_toDisplayString","_hoisted_6","content"],"sources":["/Users/tp/Documents/vue/company-website/src/components/TechList.vue"],"sourcesContent":["<template>\n  <section class=\"tech-section\">\n    <div class=\"container\">\n      <h2 class=\"section-title\">产品展示</h2>\n      <div class=\"tech-list\">\n        <div class=\"tech-item\" v-for=\"(tech, index) in techs\" :key=\"index\">\n          <img class=\"tech-img\" :src=\"tech.img\" :alt=\"tech.title\" />\n          <p class=\"tech-title\">{{ tech.title }}</p>\n          <p class=\"tech-content\">{{ tech.content }}</p>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'TechList',\n  data() {\n    return {\n      techs: [\n        { img: 'https://www.controlway.cn/uploads/allimg/191202/1-191202101T4-53.jpg', title: '电感传感器', content: '传统的电感式传感器的工作原理是：由电感式传感器的传统电路 —— 线圈振荡器产生高频磁场，并通过感应面向外发送。' },\n        { img: 'https://www.controlway.cn/uploads/allimg/191202/1-191202101T4-53.jpg', title: '电感传感器', content: '传统的电感式传感器的工作原理是：由电感式传感器的传统电路 —— 线圈振荡器产生高频磁场，并通过感应面向外发送。' },\n        { img: 'https://www.controlway.cn/uploads/allimg/191202/1-191202101T4-53.jpg', title: '电感传感器', content: '传统的电感式传感器的工作原理是：由电感式传感器的传统电路 —— 线圈振荡器产生高频磁场，并通过感应面向外发送。' },\n        { img: 'https://www.controlway.cn/uploads/allimg/191202/1-191202101T4-53.jpg', title: '电感传感器', content: '传统的电感式传感器的工作原理是：由电感式传感器的传统电路 —— 线圈振荡器产生高频磁场，并通过感应面向外发送。' },\n        { img: 'https://www.controlway.cn/uploads/allimg/191202/1-191202101T4-53.jpg', title: '电感传感器', content: '传统的电感式传感器的工作原理是：由电感式传感器的传统电路 —— 线圈振荡器产生高频磁场，并通过感应面向外发送。' },\n    \n      ]\n    }\n  }\n}\n</script>\n\n<style scoped>\n.tech-section {\n  padding: 60px 0;\n  background-color: #ffffff;\n}\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 16px;\n}\n.section-title {\n  font-size: 28px;\n  text-align: center;\n  margin-bottom: 32px;\n}\n.tech-list {\n  display: flex;\n  justify-content: center;\n  gap: 32px;\n}\n.tech-item {\n  width: 240px;\n  text-align: center;\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n  cursor: pointer;\n  /* border: 1px solid rgb(160, 154, 154); */\n}\n.tech-item:hover {\n  transform: translateY(-10px);\n  box-shadow: 0 8px 16px rgba(0,0,0,0.2);\n}\n.tech-item img {\n  width: 100%;\n  height: 160px;\n  object-fit: cover;\n}\n.tech-img {\n  border-radius: 6px;\n  border: 1px solid #f6f2f2; /* 边框颜色和宽度 */\n}\n.tech-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-top: 12px;\n  margin-left: 6px;\n  color: #333;\n  text-align: left;\n}\n.tech-content {\n  font-size: 12px;\n  margin-left: 6px;\n  text-align: left;\n  display: -webkit-box; /* 启用弹性盒模型 */\n  -webkit-box-orient: vertical; /* 垂直排列子元素 */\n  line-clamp: 2;\n  -webkit-line-clamp: 2; /* 限制最多显示 2 行 */\n  overflow: hidden; /* 隐藏超出内容 */\n  text-overflow: ellipsis; /* 超出部分用省略号表示 */\n}\n</style>"],"mappings":";;EACWA,KAAK,EAAC;AAAc;;EACtBA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAW;;;EAGfA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAc;;uBAP/BC,mBAAA,CAWU,WAXVC,UAWU,GAVRC,mBAAA,CASM,OATNC,UASM,G,0BARJD,mBAAA,CAAmC;IAA/BH,KAAK,EAAC;EAAe,GAAC,MAAI,qBAC9BG,mBAAA,CAMM,OANNE,UAMM,I,kBALJJ,mBAAA,CAIMK,SAAA,QAAAC,WAAA,CAJyCC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAA1CV,mBAAA,CAIM;MAJDD,KAAK,EAAC,WAAW;MAAiCY,GAAG,EAAED;QAC1DR,mBAAA,CAA0D;MAArDH,KAAK,EAAC,UAAU;MAAEa,GAAG,EAAEH,IAAI,CAACI,GAAG;MAAGC,GAAG,EAAEL,IAAI,CAACM;yCACjDb,mBAAA,CAA0C,KAA1Cc,UAA0C,EAAAC,gBAAA,CAAjBR,IAAI,CAACM,KAAK,kBACnCb,mBAAA,CAA8C,KAA9CgB,UAA8C,EAAAD,gBAAA,CAAnBR,IAAI,CAACU,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}